{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h2\", null, \"My first vue project with cli\");\n}","map":{"version":3,"mappings":";;uBACEA,oBAAsC,YAAlC,+BAA6B","names":["_createElementBlock"],"sourceRoot":"","sources":["C:\\Users\\Ahmed Trabelsi\\Desktop\\vueapp\\src\\components\\productDisplay.vue"],"sourcesContent":["<template>\n  <h2>My first vue project with cli</h2>\n</template>\n\n<script>\nexport default {\n  name: \"productDisplay\",\n  props: {\n    cart: {\n      type: Array,\n      required: true,\n    },\n    primium: {\n      type: Boolean,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      product: \"Chaussetes\",\n      description:\n        \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Totam earum fugit voluptate, quasi beatae quaerat quo natus iusto voluptates, incidunt molestias obcaecati. Molestias temporibus aperiam pariatur minima animi repudiandae deserunt possimus repellat voluptates illum labore quae quod velit, minus assumenda voluptatum quisquam ea nostrum.\",\n      details: [\"50% coton\", \"30% laine\", \"20% polyester\"],\n      variants: [\n        {\n          id: 2001,\n          price: 45,\n          color: \"Green\",\n          image: \"./assets/images/socks_green.jpg\",\n          qty: 20,\n        },\n        {\n          id: 2002,\n          price: 50,\n          color: \"Blue\",\n          image: \"./assets/images/socks_blue.jpg\",\n          qty: 10,\n        },\n      ],\n      sizes: [\"22-13\", \"15-64\", \"19-94\"],\n      variantIndex: 0,\n    };\n  },\n  methods: {\n    changeVariant($event, index) {\n      let variant = this.variants[index];\n      this.image = variant.image;\n      let elements = document.querySelectorAll(\".selected\");\n      elements.forEach(function (element) {\n        element.classList.remove(\"selected\");\n      });\n      event.target.classList.toggle(\"selected\");\n      this.variantIndex = index;\n    },\n    addCart() {\n      if (this.inStock) {\n        this.currentVariant.qty--;\n        this.$emit(\"add-to-cart\", this.currentVariant.id);\n      }\n    },\n    removeCart() {\n      if (this.cart.indexOf(this.currentVariant.id) >= 0) {\n        this.currentVariant.qty++;\n        this.$emit(\"remove-from-cart\", this.currentVariant.id);\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}